import {AxiosResponse} from "axios";
import {instance} from "./auth-api";
import {PackType} from "../features/table/PacksList/StickyHeadTable/PackTable";


export const PacksApi = {
    getPacks(currentPage:number|undefined,pageCount:number|undefined) {
        return instance.get<SetNewPacks, AxiosResponse<ResponseSetNewPacks>>(`/cards/pack?page=${currentPage}&pageCount=${pageCount}`, {
            params: {
                // packName: 'New Pack', // –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
                // min: 0, // –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
                // max: 0, // –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
                // sortPacks: "", // –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
                // page: 0, // –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
                // pageCount: 0, // –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
                // userId: 0,// —á—å–∏ –∫–æ–ª–æ–¥—ã –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –∏–ª–∏ –ø—Ä–∏–¥—É—Ç –≤—Å–µ
                // block: true // –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
// –µ—Å–ª–∏ –≤–∞—Å –∫—Ç–æ-—Ç–æ –∑–∞–±–∞–Ω–∏–ª. –¢–æ —Å –ø–æ–º–æ—â—å—é
// –¥–∞–Ω–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –º–æ–∂–Ω–æ —É–≤–∏–¥–µ—Ç—å —Å–≤–æ–∏ –∫–æ–ª–æ–¥—ã
// –∏ –ø–æ–ø—Ä–∞–≤–∏—Ç—å –∏—Ö –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å –∏–ª–∏ –æ–±–∂–∞–ª–æ–≤–∞—Ç—å üôÉ
            }
        })
    },
    newCardsPack(cardsPack: CardsPackType) {
        return instance.post<RecoveryPacksType>('/cards/pack',
            {
                cardsPack: cardsPack

            }
        )
    },
    deletedCardsPack(_id: string) {
        return instance.delete(`/cards/pack?id=${_id}`)
    },
    updatedCardsPack(cardsPack: PackType) {
        return instance.put<UpdatedCardsPackType>('/cards/pack', {
            cardsPack: cardsPack
        })
    },

}


export type SetNewPacks = {
    packName?: string, // –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
    min?: number, // –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
    max?: number, // –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
    sortPacks?: number, // –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
    page?: number, // –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
    pageCount?: number, // –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
    userId?: number, // —á—å–∏ –∫–æ–ª–æ–¥—ã –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –∏–ª–∏ –ø—Ä–∏–¥—É—Ç –≤—Å–µ
    block?: boolean // –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
// –µ—Å–ª–∏ –≤–∞—Å –∫—Ç–æ —Ç–æ –∑–∞–±–∞–Ω–∏–ª. –¢–æ —Å –ø–æ–º–æ—â—å—é
// –¥–∞–Ω–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –º–æ–∂–Ω–æ —É–≤–∏–¥–µ—Ç—å —Å–≤–æ–∏ –∫–æ–ª–æ–¥—ã
// –∏ –ø–æ–ø—Ä–∞–≤–∏—Ç—å –∏—Ö –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å –∏–ª–∏ –æ–±–∂–∞–ª–æ–≤–∞—Ç—å üôÉ
}
export type ResponseSetNewPacks = {
    cardPacks: [
        {
            _id: string,
            user_id: string,
            name: string,
            cardsCount: number,
            created: string,
            updated: string,
        },
    ]
    cardPacksTotalCount: number, // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–ª–æ–¥
    maxCardsCount: number,
    minCardsCount: number,
    page: number,// –≤—ã–±—Ä–∞–Ω–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    pageCount: number, // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
}

type RecoveryPacksType = {
    name?: string,// –µ—Å–ª–∏ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±—É–¥–µ—Ç —Ç–∞–∫–∏–º
    deckCover?: string, // –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω
    private?: false // –µ—Å–ª–∏ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±—É–¥–µ—Ç —Ç–∞–∫–æ–π
}

type UpdatedCardsPackType = {
    _id: string,
    name?: string,
}

export type CardsPackType = {
    name: string,
    deckCover?: string
    private?: boolean
}
